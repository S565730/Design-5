## Problem 2: Copy List with Random Pointer
class Solution {
    public Node copyRandomList(Node head) {
        if (head == null) return null;

        // Step 1: Clone each node and insert it after the original node
        Node curr = head;
        while (curr != null) {
            Node copy = new Node(curr.val);
            copy.next = curr.next;
            curr.next = copy;
            curr = copy.next;
        }

        // Step 2: Assign random pointers to the copied nodes
        curr = head;
        while (curr != null) {
            if (curr.random != null) {
                curr.next.random = curr.random.next;
            }
            curr = curr.next.next;
        }

        // Step 3: Separate the cloned list from the original list
        Node dummy = new Node(0);
        Node copyCurr = dummy, originalCurr = head;
        while (originalCurr != null) {
            copyCurr.next = originalCurr.next;
            copyCurr = copyCurr.next;

            originalCurr.next = originalCurr.next.next;
            originalCurr = originalCurr.next;
        }

        return dummy.next;
    }
}